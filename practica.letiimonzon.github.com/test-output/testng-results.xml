<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="6" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-08-14T21:01:24Z" name="Default suite" finished-at="2019-08-14T21:01:24Z" duration-ms="137">
    <groups>
    </groups>
    <test started-at="2019-08-14T21:01:24Z" name="Default test" finished-at="2019-08-14T21:01:24Z" duration-ms="137">
      <class name="practica.letiimonzon.github.com.Prueba1">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="beforeClass" finished-at="2019-08-14T21:01:24Z" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="beforeMethod" finished-at="2019-08-14T21:01:24Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1(java.lang.String, java.lang.Integer)[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="test1" data-provider="dtGenerico" finished-at="2019-08-14T21:01:24Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Analia]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="afterTest" finished-at="2019-08-14T21:01:24Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="beforeMethod" finished-at="2019-08-14T21:01:24Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1(java.lang.String, java.lang.Integer)[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="test1" data-provider="dtGenerico" finished-at="2019-08-14T21:01:24Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Leti]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="afterTest" finished-at="2019-08-14T21:01:24Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="beforeMethod" finished-at="2019-08-14T21:01:24Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test1(java.lang.String, java.lang.Integer)[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="test1" data-provider="dtGenerico" finished-at="2019-08-14T21:01:24Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Gaston]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="afterTest" finished-at="2019-08-14T21:01:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method signature="test2()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="test2" finished-at="2019-08-14T21:01:24Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="beforeMethod" finished-at="2019-08-14T21:01:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="afterTest" finished-at="2019-08-14T21:01:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="beforeMethod" finished-at="2019-08-14T21:01:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testEdad(java.lang.String, java.lang.Integer)[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="testEdad" data-provider="personas" finished-at="2019-08-14T21:01:24Z" duration-ms="12" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Analia]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[14]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Menor de edad expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Menor de edad expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at practica.letiimonzon.github.com.Prueba1.testEdad(Prueba1.java:67)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEdad -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="afterTest" finished-at="2019-08-14T21:01:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="beforeMethod" finished-at="2019-08-14T21:01:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testEdad(java.lang.String, java.lang.Integer)[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="testEdad" data-provider="personas" finished-at="2019-08-14T21:01:24Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Leti]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[22]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEdad -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="afterTest" finished-at="2019-08-14T21:01:24Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="beforeMethod" finished-at="2019-08-14T21:01:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="testEdad(java.lang.String, java.lang.Integer)[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="testEdad" data-provider="personas" finished-at="2019-08-14T21:01:24Z" duration-ms="15" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Gaston]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[12]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
Menor de edad expected [true] but found [false],
Contiene la letra o expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
Menor de edad expected [true] but found [false],
Contiene la letra o expected [false] but found [true]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)
at practica.letiimonzon.github.com.Prueba1.testEdad(Prueba1.java:67)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEdad -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="afterTest" finished-at="2019-08-14T21:01:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method signature="test3()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="test3" finished-at="2019-08-14T21:01:24Z" depends-on-methods="practica.letiimonzon.github.com.Prueba1.test2" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="beforeMethod" finished-at="2019-08-14T21:01:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="afterTest" finished-at="2019-08-14T21:01:24Z" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:practica.letiimonzon.github.com.Prueba1@7f77e91b]" started-at="2019-08-14T21:01:24Z" name="afterClass" finished-at="2019-08-14T21:01:24Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- practica.letiimonzon.github.com.Prueba1 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
